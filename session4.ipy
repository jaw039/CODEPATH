# Problem 1: Most Endangered Species

# Imagine you are working on a wildlife conservation database. Write a function named most_endangered() that returns the species with the highest conservation priority based on its population.

# The function should take in a list of dictionaries named species_list as a parameter. Each dictionary represents data associated with a species, including its name, habitat, and wild population. The function should return the name of the species with the lowest population.

# If there are multiple species with the lowest population, return the species with the lowest index.


## UPI 

## Understand: 
## Input: list of dictionaries 
## Output: index 
## Edge Cases/ Constraint : if there is multiply species get the lowest one, 
# what if the list has a none element (return -1)


## Plan 
## create a variable for the most_endangerours 
## iterate through the dictionaries element
## return the name the least population 


## GOAL: return the list with the lowest number 
def most_endangered(species_list):
    if not species_list:
        return -1

    most_endangered_spe = species_list[0]



    for species in species_list:
        if species["population"] < most_endangered_spe["population"]:
            most_endangered_spe = species
    return most_endangered_spe["name"]

species_list = [
    {"name": "Amur Leopard",
     "habitat": "Temperate forests",
     "population": 10
    },
    {"name": "Javan Rhino",
     "habitat": "Tropical forests",
     "population": 10
    },
    {"name": "Vaquita",
     "habitat": "Marine",
     "population": 10
    }
]

# species_list = [

# ]

print(most_endangered(species_list))



